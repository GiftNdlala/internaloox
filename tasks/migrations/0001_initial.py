# Generated by Django 4.2.7 on 2025-08-05 19:15

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('orders', '0011_order_deposit_paid_date_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('assigned', 'üìã Assigned'), ('started', 'üü° Started'), ('paused', '‚è∏Ô∏è Paused'), ('completed', '‚úÖ Completed'), ('review_needed', 'üîç Review Needed'), ('approved', '‚úÖ Approved'), ('rejected', '‚ùå Rejected'), ('cancelled', 'üö´ Cancelled')], default='assigned', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('estimated_duration', models.DurationField(default=datetime.timedelta(seconds=3600))),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('total_time_spent', models.DurationField(default=datetime.timedelta(0))),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_assigned', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='orders.order')),
                ('order_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='orders.orderitem')),
            ],
            options={
                'ordering': ['-priority', 'due_date', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.product')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('estimated_duration_minutes', models.IntegerField(default=60, help_text='Estimated time in minutes')),
                ('requires_materials', models.BooleanField(default=False, help_text='Task requires material allocation')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sequence_order', models.IntegerField(default=0, help_text='Order in production workflow')),
            ],
            options={
                'ordering': ['sequence_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TaskTimeSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_sessions', to='tasks.task')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('task_assigned', 'Task Assigned'), ('task_started', 'Task Started'), ('task_completed', 'Task Completed'), ('task_paused', 'Task Paused'), ('task_overdue', 'Task Overdue'), ('task_approved', 'Task Approved'), ('task_rejected', 'Task Rejected'), ('material_needed', 'Material Needed')], max_length=20)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_notifications', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='tasks.task')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('general', 'General Note'), ('issue', 'Issue/Problem'), ('pause', 'Task Paused'), ('material_request', 'Material Request'), ('rejection', 'Rejection Reason'), ('completion', 'Completion Note')], default='general', max_length=20)),
                ('content', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='task_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='tasks.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='task_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.tasktype'),
        ),
        migrations.CreateModel(
            name='WorkerProductivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('tasks_assigned', models.IntegerField(default=0)),
                ('tasks_completed', models.IntegerField(default=0)),
                ('tasks_approved', models.IntegerField(default=0)),
                ('total_time_worked', models.DurationField(default=datetime.timedelta(0))),
                ('average_task_time', models.DurationField(blank=True, null=True)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productivity_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('worker', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TaskTemplateStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_order', models.IntegerField()),
                ('estimated_duration', models.DurationField(default=datetime.timedelta(seconds=3600))),
                ('description', models.TextField(blank=True, null=True)),
                ('requires_previous_completion', models.BooleanField(default=True)),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.tasktype')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='tasks.tasktemplate')),
            ],
            options={
                'ordering': ['sequence_order'],
                'unique_together': {('template', 'sequence_order')},
            },
        ),
        migrations.CreateModel(
            name='TaskMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_needed', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity_allocated', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_allocated', models.BooleanField(default=False)),
                ('allocated_at', models.DateTimeField(blank=True, null=True)),
                ('allocated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.material')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_materials', to='tasks.task')),
            ],
            options={
                'unique_together': {('task', 'material')},
            },
        ),
    ]
